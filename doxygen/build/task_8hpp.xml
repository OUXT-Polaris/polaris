<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="task_8hpp" kind="file" language="C++">
    <compoundname>task.hpp</compoundname>
    <includes refid="state__machine_8hpp" local="no">polaris/types/task/state_machine.hpp</includes>
    <includes refid="entity_8hpp" local="no">polaris/types/entity.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includedby refid="functions_8hpp" local="no">/home/runner/work/polaris/polaris/include/polaris/built_in_functions/functions.hpp</includedby>
    <includedby refid="task__planner_8hpp" local="no">/home/runner/work/polaris/polaris/include/polaris/types/task/task_planner.hpp</includedby>
    <includedby refid="task_8cpp" local="no">/home/runner/work/polaris/polaris/src/types/task/task.cpp</includedby>
    <incdepgraph>
      <node id="105">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="107">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="106">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="113">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="108">
        <label>boost/graph/graphviz.hpp</label>
      </node>
      <node id="110">
        <label>string</label>
      </node>
      <node id="111">
        <label>vector</label>
      </node>
      <node id="104">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="112">
        <label>polaris/types/entity.hpp</label>
        <link refid="entity_8hpp_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>mutex</label>
      </node>
      <node id="100">
        <label>/home/runner/work/polaris/polaris/include/polaris/types/task/task.hpp</label>
        <link refid="task_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>polaris/types/task/state_machine.hpp</label>
        <link refid="state__machine_8hpp_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>boost/graph/adjacency_list.hpp</label>
      </node>
      <node id="103">
        <label>boost/graph/graph_utility.hpp</label>
      </node>
      <node id="114">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="118">
        <label>/home/runner/work/polaris/polaris/include/polaris/types/task/task_planner.hpp</label>
        <link refid="task__planner_8hpp_source"/>
      </node>
      <node id="117">
        <label>/home/runner/work/polaris/polaris/include/polaris/parser/parser.hpp</label>
        <link refid="parser_8hpp_source"/>
      </node>
      <node id="116">
        <label>/home/runner/work/polaris/polaris/include/polaris/built_in_functions/functions.hpp</label>
        <link refid="functions_8hpp_source"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>/home/runner/work/polaris/polaris/include/polaris/types/task/task.hpp</label>
        <link refid="task_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpolaris_1_1types_1_1Task" prot="public">polaris::types::Task</innerclass>
    <innernamespace refid="namespacepolaris">polaris</innernamespace>
    <innernamespace refid="namespacepolaris_1_1types">polaris::types</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2020,<sp/>OUXT-Polaris</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>POLARIS__TYPES__TASK__TASK_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLARIS__TYPES__TASK__TASK_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;polaris/types/task/state_machine.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;polaris/types/entity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepolaris" kindref="compound">polaris</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">types</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>task_state_description[]<sp/>=</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">&lt;state_machine&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/>&lt;init_state<sp/>name=&quot;initialized&quot;/&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/>&lt;state_machine_name<sp/>name=&quot;task_state_machine&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/>&lt;transition<sp/>from<sp/>=<sp/>&quot;initialized&quot;<sp/>to=&quot;running&quot;<sp/>name=&quot;start&quot;/&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/>&lt;transition<sp/>from<sp/>=<sp/>&quot;running&quot;<sp/>to=&quot;succeed&quot;<sp/>name=&quot;success&quot;/&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/>&lt;transition<sp/>from<sp/>=<sp/>&quot;running&quot;<sp/>to=&quot;failed&quot;<sp/>name=&quot;failure&quot;/&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/>&lt;transition<sp/>from<sp/>=<sp/>&quot;running&quot;<sp/>to=&quot;yield&quot;<sp/>name=&quot;yield&quot;/&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/>&lt;transition<sp/>from<sp/>=<sp/>&quot;initialized&quot;<sp/>to=&quot;yield&quot;<sp/>name=&quot;yield&quot;/&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/>&lt;transition<sp/>from<sp/>=<sp/>&quot;yield&quot;<sp/>to=&quot;initialized&quot;<sp/>name=&quot;initialize&quot;/&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">&lt;/state_machine&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">)&quot;;</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>TaskState</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>INITIALIZED,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>RUNNING,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>SUCCEED,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>FAILED,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>YEILD</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classpolaris_1_1types_1_1Task" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpolaris_1_1types_1_1Task" kindref="compound">Task</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classpolaris_1_1types_1_1Task" kindref="compound">Task</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classpolaris_1_1types_1_1Task" kindref="compound">Task</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Task&gt;<sp/>depends,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Entity&gt;<sp/>entities,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reward);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDepends(<ref refid="classpolaris_1_1types_1_1Task" kindref="compound">Task</ref><sp/>task);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>TaskState<sp/>getState()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getSpendTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getReward()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>std::vector&lt;Task&gt;<sp/>depends_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reward_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;StateMachine&gt;<sp/>state_machine_ptr_;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::vector&lt;Entity&gt;<sp/>entities_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>polaris</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>POLARIS__TYPES__TASK__TASK_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/polaris/polaris/include/polaris/types/task/task.hpp"/>
  </compounddef>
</doxygen>
